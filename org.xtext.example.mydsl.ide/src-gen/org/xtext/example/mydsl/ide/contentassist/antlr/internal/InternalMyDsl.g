/*
 * generated by Xtext 2.14.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFSM
entryRuleFSM
:
{ before(grammarAccess.getFSMRule()); }
	 ruleFSM
{ after(grammarAccess.getFSMRule()); } 
	 EOF 
;

// Rule FSM
ruleFSM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFSMAccess().getGroup()); }
		(rule__FSM__Group__0)
		{ after(grammarAccess.getFSMAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitstate
entryRuleInitstate
:
{ before(grammarAccess.getInitstateRule()); }
	 ruleInitstate
{ after(grammarAccess.getInitstateRule()); } 
	 EOF 
;

// Rule Initstate
ruleInitstate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitstateAccess().getGroup()); }
		(rule__Initstate__Group__0)
		{ after(grammarAccess.getInitstateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFinalstate
entryRuleFinalstate
:
{ before(grammarAccess.getFinalstateRule()); }
	 ruleFinalstate
{ after(grammarAccess.getFinalstateRule()); } 
	 EOF 
;

// Rule Finalstate
ruleFinalstate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFinalstateAccess().getGroup()); }
		(rule__Finalstate__Group__0)
		{ after(grammarAccess.getFinalstateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getGroup_7_0()); }
		(rule__FSM__Group_7_0__0)
		{ after(grammarAccess.getFSMAccess().getGroup_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getFSMAccess().getGroup_7_1()); }
		(rule__FSM__Group_7_1__0)
		{ after(grammarAccess.getFSMAccess().getGroup_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__0__Impl
	rule__FSM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getFSMAction_0()); }
	()
	{ after(grammarAccess.getFSMAccess().getFSMAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__1__Impl
	rule__FSM__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getFSMKeyword_1()); }
	'FSM'
	{ after(grammarAccess.getFSMAccess().getFSMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__2__Impl
	rule__FSM__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getNameAssignment_2()); }
	(rule__FSM__NameAssignment_2)
	{ after(grammarAccess.getFSMAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__3__Impl
	rule__FSM__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getInitstateKeyword_3()); }
	'initstate'
	{ after(grammarAccess.getFSMAccess().getInitstateKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__4__Impl
	rule__FSM__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getStateAssignment_4()); }
	(rule__FSM__StateAssignment_4)
	{ after(grammarAccess.getFSMAccess().getStateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__5__Impl
	rule__FSM__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getFinalstateKeyword_5()); }
	'finalstate'
	{ after(grammarAccess.getFSMAccess().getFinalstateKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__6__Impl
	rule__FSM__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getStateAssignment_6()); }
	(rule__FSM__StateAssignment_6)
	{ after(grammarAccess.getFSMAccess().getStateAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getAlternatives_7()); }
	(rule__FSM__Alternatives_7)*
	{ after(grammarAccess.getFSMAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FSM__Group_7_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_0__0__Impl
	rule__FSM__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getStateKeyword_7_0_0()); }
	'state'
	{ after(grammarAccess.getFSMAccess().getStateKeyword_7_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_0__1__Impl
	rule__FSM__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getStateAssignment_7_0_1()); }
	(rule__FSM__StateAssignment_7_0_1)
	{ after(grammarAccess.getFSMAccess().getStateAssignment_7_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getGroup_7_0_2()); }
	(rule__FSM__Group_7_0_2__0)*
	{ after(grammarAccess.getFSMAccess().getGroup_7_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FSM__Group_7_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_0_2__0__Impl
	rule__FSM__Group_7_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getCommaKeyword_7_0_2_0()); }
	','
	{ after(grammarAccess.getFSMAccess().getCommaKeyword_7_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getStateAssignment_7_0_2_1()); }
	(rule__FSM__StateAssignment_7_0_2_1)
	{ after(grammarAccess.getFSMAccess().getStateAssignment_7_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FSM__Group_7_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_1__0__Impl
	rule__FSM__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getTransitionKeyword_7_1_0()); }
	'transition'
	{ after(grammarAccess.getFSMAccess().getTransitionKeyword_7_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_1__1__Impl
	rule__FSM__Group_7_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getTransitionAssignment_7_1_1()); }
	(rule__FSM__TransitionAssignment_7_1_1)
	{ after(grammarAccess.getFSMAccess().getTransitionAssignment_7_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getGroup_7_1_2()); }
	(rule__FSM__Group_7_1_2__0)*
	{ after(grammarAccess.getFSMAccess().getGroup_7_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FSM__Group_7_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_1_2__0__Impl
	rule__FSM__Group_7_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getCommaKeyword_7_1_2_0()); }
	','
	{ after(grammarAccess.getFSMAccess().getCommaKeyword_7_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FSM__Group_7_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__Group_7_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFSMAccess().getTransitionAssignment_7_1_2_1()); }
	(rule__FSM__TransitionAssignment_7_1_2_1)
	{ after(grammarAccess.getFSMAccess().getTransitionAssignment_7_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
	()
	{ after(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getNameAssignment_1()); }
	(rule__Transition__NameAssignment_1)
	{ after(grammarAccess.getTransitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getStateFromAssignment_2()); }
	(rule__Transition__StateFromAssignment_2)
	{ after(grammarAccess.getTransitionAccess().getStateFromAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
	'->'
	{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getStateToAssignment_4()); }
	(rule__Transition__StateToAssignment_4)
	{ after(grammarAccess.getTransitionAccess().getStateToAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTriggerKeyword_5()); }
	': trigger:'
	{ after(grammarAccess.getTransitionAccess().getTriggerKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_6()); }
	(rule__Transition__TriggerAssignment_6)
	{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStateAction_0()); }
	()
	{ after(grammarAccess.getStateAccess().getStateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initstate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initstate__Group__0__Impl
	rule__Initstate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initstate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitstateAccess().getInitstateAction_0()); }
	()
	{ after(grammarAccess.getInitstateAccess().getInitstateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initstate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initstate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initstate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitstateAccess().getNameAssignment_1()); }
	(rule__Initstate__NameAssignment_1)
	{ after(grammarAccess.getInitstateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Finalstate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Finalstate__Group__0__Impl
	rule__Finalstate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Finalstate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalstateAccess().getFinalstateAction_0()); }
	()
	{ after(grammarAccess.getFinalstateAccess().getFinalstateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Finalstate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Finalstate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Finalstate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalstateAccess().getNameAssignment_1()); }
	(rule__Finalstate__NameAssignment_1)
	{ after(grammarAccess.getFinalstateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FSM__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getFSMAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__StateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getStateInitstateParserRuleCall_4_0()); }
		ruleInitstate
		{ after(grammarAccess.getFSMAccess().getStateInitstateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__StateAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getStateFinalstateParserRuleCall_6_0()); }
		ruleFinalstate
		{ after(grammarAccess.getFSMAccess().getStateFinalstateParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__StateAssignment_7_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getStateStateParserRuleCall_7_0_1_0()); }
		ruleState
		{ after(grammarAccess.getFSMAccess().getStateStateParserRuleCall_7_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__StateAssignment_7_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getStateStateParserRuleCall_7_0_2_1_0()); }
		ruleState
		{ after(grammarAccess.getFSMAccess().getStateStateParserRuleCall_7_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__TransitionAssignment_7_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getTransitionTransitionParserRuleCall_7_1_1_0()); }
		ruleTransition
		{ after(grammarAccess.getFSMAccess().getTransitionTransitionParserRuleCall_7_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FSM__TransitionAssignment_7_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSMAccess().getTransitionTransitionParserRuleCall_7_1_2_1_0()); }
		ruleTransition
		{ after(grammarAccess.getFSMAccess().getTransitionTransitionParserRuleCall_7_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getTransitionAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StateFromAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getStateFromStateCrossReference_2_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getStateFromStateEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransitionAccess().getStateFromStateEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getStateFromStateCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StateToAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getStateToStateCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getStateToStateEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransitionAccess().getStateToStateEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getStateToStateCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getTriggerEStringParserRuleCall_6_0()); }
		ruleEString
		{ after(grammarAccess.getTransitionAccess().getTriggerEStringParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getStateAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initstate__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitstateAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getInitstateAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Finalstate__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFinalstateAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getFinalstateAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
